import base64; exec(base64.b64decode('import base64; exec(base64.b64decode('aW1wb3J0IGJhc2U2NDsgZXhlYyhiYXNlNjQuYjY0ZGVjb2RlKCdhVzF3YjNKMElHSmhjMlUyTkRzZ1pYaGxZeWhpWVhObE5qUXVZalkwWkdWamIyUmxLQ2RoVnpGM1lqTktNRWxIU21oak1sVXlUa1J6WjFwWWFHeFplV2hwV1ZoT2JFNXFVWFZaYWxrd1drZFdhbUl5VW14TFEyUm9WbnBHTTFscVRrdE5SV3hJVTIxb2FrMXNWWGxVYTFKNldqRndXV0ZIZUZwbFYyaHdWMVpvVDJKRk5YRlZXRlphWVd4cmQxZHJaRmRoYlVsNVZXMTRURkV5VW05V2JuQkhUVEZzY1ZScmRFNVNWM2hKVlRJeGIyRnJNWE5XV0d4VllURktObGRxUm5kWFYwWklaVVp3YkZZeWFIZFdNVnB2VkRKS1JrNVlSbFpYUmxwaFdWZDRjbVF4WkhKYVJtUm9ZbFZzTlZaWE1UUlVSa1Y1VlcwNVYySnVRa2hVVkVaelkxWlNjbVJGTlZOV00yaEtWbFJKZUdJeVJuSk5XRTVYVjBkNFZsbFVSa3RPYkdSeFVtNWtXRll3V2tsYVZWcDNZa1paZVdGSVpGZE5WbkIyVmtSS1MxSnJOVmxTYkZwWVVteHdhRmRXWkRSamJWRjRXa2hLWVZKdFVtOVpiRlp6VGxaYVdFMVVVbFZTYTFZMVZsY3dOVll5U25WUmEyaFZWa1ZhZWxreFdsTmpiVkpHVGxaT1YwMHlhRXRXYkZKS1pVZEplVkp1U2s1WFJUVllWakJrTkZac2JGVlNhM1JQWWtkU2VGVnROV3RYUmxsM1YydHNZVlpXY0ROWmExcGFaVmRHU1ZwR1pFNVdia0l5Vm10U1MxTXhTbkpPVm14VFlrWndXVlZ0ZUhkaFJtUlhXa1JTYW1KV1JqUlhhMmhMV1ZaS2RGVnRPVnBpUmxwNlZHeGFZVmRGTVZWVmJGWlRZVEZaTVZac1kzZE9WbGw1VTI1V1VtRXlhRlpXYTFaaFpXeHJlRmRzVG1waVZrcEhWR3hhVDFZd01IbGhSWFJYWWtaS1MxcFZaRXBsVmtwMVUyczFXRkpVVmxsV2FrSnJUa1phYzJKR1ZsTmhNMUpRV1d0a1UyVkdWblJPVjNSWVVteHNNMVl5ZEhOWlZscFhZMFJPV21FeGNHRmFWbVJIVTFad1IxcEZOVmRpYTBsNVZtMTBVMU14VFhoVGJrcFBWbTE0VkZsclduZFhWbFowWlVoa2FGSnRVbGhYYTFKVFlXMUtWMUpxVWxoaE1taE1WMVphUzJSR1ZuUlBWbkJwVW14d05sWkhlR0ZaVm1SR1RWWldWbUpHV2xSWlZFWmFUVlphYzFrelpFOVdiR3cxVlRJMVYxVnRSWGxoUmxwWFlURmFhRnBYZUhKbFJtUnpWRzF3YVZacmNFaFdSM2hoVkRGWmQwMUliR2hTV0doWVdXdGFTMU14Y0ZaV1ZFWlVVbXR3TVZaSE1VZFZNVmw0VTJ4d1dGWjZSalpVVmxwelZqSk9SMkZIY0d4aE1YQlpWbGN3TVZFeFpGZGpSVnBZWVhwc1dGbHNWbmRXTVZKelZtNU9WMVpzY0RCV1YzQlBWMnhhYzJOSGFGWk5SMUpUV2xkNGQxSXhaSEpPVm1ScFUwVkpNVlp0TVRCVk1VMTRWMWhvWVZKWFVsbFpiWE14WTBaV2RHUklaR2xOVjNoV1ZWYzFhMkV3TVZkalJXaFlWa1UxZGxadGMzaFNWbHB6WVVab2FFMVlRbmxYVmxaaFV6RmFjazVXYkZKaVJscFlWRlJLYjJJeFduUmxSMFpXVFdzeE5GbFVUbmRoUmtwMVVXeG9XbUpHY0V4Vk1GcHJWbFpHYzFSc1RrNVdNVXBLVmxSS01HSXlSa2RUYmtwUFZtMTRZVlpxVGxOTk1WVjNWMnh3YTAxV2NGcFpWVnB2VmpKS2NsTnJjRmhXTTFKWFZGWmFVMk14VG5GWGJXaE9UVEJLV1ZadGRGZFpWbVJIVjI1R1UySnJOVmxWYlhNeFpWWnNWbGRzWkdoV01IQkhXVEJhUjFZeVNsbFJiRUphWVd0d1VGbDZSbUZqTVhCSFYyMW9UbEpHV2xoV2JHTjNaVVUxUjFwRlpHRlNiRnBXV1d4U2MySXhVbFpWYTJSc1ZtMTRlVlpYTVVkV01rWTJVbXBHVmxZelVsUldiWE40WkZkR1IxRnNXbWxYUlRFMFZtcEdZV0V5VWtkVGJrNVZZbGQ0V0ZSWE1XOVdNVnB4VW14T1VrMXJWalJXUm1odlZUSktjbU5GT1ZkaVJuQXpXVEo0VjJNeFpIUlNiR1JPVm0xM2VsWnRNVEJOUmxKeVRWWm9WbUpIZUdoV2JHUk9UVlphV0dNemFHcE5WVFY0VlZkNGExVXlWbk5YYkd4WFlsUkZNRll5TVZkV01WcDFWbXhLYVZKc2NGbFdWM2hYVjJzeFIxZHVTbFpoTWxKVVdXeGFZVll4VWxkWGJHUldZbFZ3V1ZwVldsTldWbHB6WTBST1YySllhR2hXYWtacll6RlNkR05GTlZkV1Jsa3lWbXhTUjJJeVJYbFNiR1JWWVRGd1ZWbHJaRzlaVm14eVdrYzVVMUpzV25sV01qRkhZVEZKZDA1RVNsWmlXR2hRVmxSR1lWSnNaSE5oUm1SVFVsWndXRlpHV21GWGJWWkhXa2hXVkdKWVFsUlpiRnBMVjFaYVIxZHRSbXROYTFwSVdXdGFiMkZyTUhsVmJrcFZWbFpLU0ZZd1dtdGpiR1J5Vkd4a1RtRXpRbGxXVkVreFlURlplVk5zYkZaaVIyaFhXbGQwWVZSR1ZuRlRhMXBzWWxWYVNGbFZaSE5oVmxweVkwWkdWMkpIVGpSVWExcE9aVVp3U1ZSdGJGUlNXRUphVjFkNFYxbFdaRmRpU0VwaFVtczFWRlJXV25OT1ZuQkdWV3RPVjAxcldUSlZiWGh2VjJzeFIyTkZVbGRoYTNCTVZXcEtUMUl4Um5OWGJXaG9UVEJLU2xac1VrTmhNVmw0Vkd0b1ZXRXlVbFpaYTJSdlZrWnNWVlJyVGxOaVJuQXdWRlZvYjJFd01WZFNhbEpYVW0xb2VsWnFTa3RUUjBaSFZteHdWMUpXYjNwV2JYQkhZekZhVjFSdVJsWmlSMUpVV1d0b1EwNVdXbk5hUkVKVlRXdGFlbFV5TlV0aGJFcFlZVVprV21KR1NsaFpNbmh6Vm14YVdXRkdhRmRoTVhBMlYxZDBZV0V4VW5OWFdHaFVZbTE0V0ZSV1duZGhSbFY1VFZaa1UwMVlRa3BXYlhoUFlWWk9SbE5zUWxoV2JWRXdWMVpWTVdNeGNFbFRiRnBvVFRGS1dGWkdXbGRrTVU1WFZtNVNhMUo2YkhCVmJYUnpUbFp3Vm1GRlRsZE5hM0JJVlRKNGExWldXbk5qU0VwYVpXdGFjbHBGVlRWV01VNXlUbFpPVTFadVFrdFdha1pUVVRGc1dGTllhRmhpYkVwVldXdGtVMk5XVm5GVGJUbFhUVmQ0V1ZwRlZqQlhiRnAxVVd0YVZtSlVSWGRXYWtGNFZqRk9jVkpzV2s1aWF6QjRWMVpXVm1WR1duUlVhMlJXWWtkb1dGUlVRa3RVVm1SWFZXdGtWVTFyTVRSVk1uaHpXVlpLY2s1WVFsZGhNWEJvVmpKNGExZEhWa2hrUlRsVFlURlpNRlpzV205aU1WbDVVMjVLVDFac1NtRlpWRXBUVmtaU1ZsZHVaRmRpU0VKS1YydGtiMVl5U2tsUmEyeFhZV3RyZUZwRVJtdFRSa3BaWVVab2FWSlZjR2hYVm1Rd1pERldSMkpFV2xSaGVteFVWRmQwZDFOV2JGWldWRVpWWWtWd1dsVlhkRzlXTWtwWllVZG9XbFl6VFhoV01GcFBaRlpTYzFadGJGTmlhMHBZVmpGYVUxRXlVWGxTYTJSV1lrZFNiMVZzVlRGV1ZscDBaVWhrVGxKc1NsaFpWV1F3WVVaSmQyTkdaRnBOUmtwRVYxWmFZVll4VG5OUmJHaFhZa2hDVFZacVFtRldNazE1VW10a2FsSnRVbFJXYlRWQ1pVWlplV1ZIUmxwV2JHdzFWbGQwYjFVeVJYbGhTRXBXWWxoTmVGWkVSbGRrUjFaSldrVTFWMkpJUWpaV2JUQjRVakZhVmsxV1dsZGhiRnBYVkZjMWIyRkdiSEpYYXpsVFRWVTFlbGRyV25kaFZrbDVZVVJLVjAxV2NHaFdWRVpoVmpGS2RWWnNhR2hsYkZwWlYxZDRiMVZ0Vm5OYVJtUlhZbFZhVlZSWGRHRldNVkpYVjI1T1ZtSlZjRWxhVlZwaFYyMUZlVlZzVWxWV1JWcDZWakJWZUZadFVraGtSazVPVm01Q1NGWnRkR3BsUmtsNFZsaG9XRmRIYUZWWmEyUTBWMVphZEdWRmRGUlNiWGd3VkZaYWExWXdNVmRqUkVaWFZucEdkbFpVUVhkbFJrNXpWbXhrVTJKR2NHOVdNVnBXWkRKV1IxZHVWbFJpUjJodlZGZDRTMlZXWkZoa1IzQlBWbFJDTkZscmFFdFdNa3BHVGxaa1dtRXhjSHBVYkZwaFYwVTFWbHBHYUdsV1dFSkpWMVJDYTFJeGJGZFRhMXBZWVdzMVYxbFhkSGRUUmxaMFRWWk9WRkl4U2toWGExcHJWR3N4ZEdGRmVGZGlWRVV3V1ZjeFYxSnJOVlphUjBaVVVsaENVRlpVUW10Vk1rNUhZMFpvYTFJd1dtRldiWGhMVmpGa2NsbDZWbGROVlhBd1dsVm9jMVl3TVhGV2JrcFhWa1ZHTkZWc1pFdFNNa3BJVW14T1YySnJSalpXYlhCRFdWWk5lVlJ1VWxWaE1uaFpXV3RhZDJJeFVsZGhSVTVVVm0xU2VWWlhkR3RXTWtwWFYydG9WMUo2VmxCV01HUkxVakpPUjJGR1ZsZE5NbWhOVm10V1lWbFdXWGhXYmtwVllrVTFiMXBYZUdGWFZscHlXa1JTV2xac2NGbFZiR2gzVm0xS1ZsZHNXbGRpUm5CTVZUQmFWMlJIVmtoU2JFNU9ZVEZ3UzFZeWRHRmlNVlYzVFZaa2FsSkdXbGhaYkdodlZrWmFSVkp0UmxkTldFSkhXV3RhUzJGRk1YUmhSemxYVmpOb2FGZFdaRmRqTWtWNldrWm9hRTFzU2xwV1Z6QXhVVEZKZUZkdVVteFNNRnBZVkZkNFlVMUdjRlpYYTJSWFRWWndlbFV5ZERSV1ZscFhZMFU1WVZaV2NGaFpla1ozVWpKR1NHSkdUbWxoTUhCaFZtMHdlR1F4VFhoV1dHaFZWMGRvV0ZsdGRIZFdNV3hWVVZSR2FsSnRlSGxXYkZKSFYwWmFkVkZzWkZkV00wMHhXVlZWZUZKV1NuSlhiRnBwVW10d1RWWnRjRWRUTURWelUyNUtiRkp0VWxSVVZFcHZZakZhVlZKdFJsWk5helZZVjJ0b1QxWXlTbGhoUlRsYVYwaENWRlJ0ZUZwbFJtUjBVbXhrVGxac1dUQldiVEF4VlRGYVIxcEZhRlppUlVwWVdXdGFkMVJHYkhGU2JFNVhZa1phZWxkclpHOVZNa3BKVVd4c1YyRnJiekJYVmxwVFl6Rk9kVlZzUWxkU1ZGWm9WMVpTUjFsV1pFZFhhMmhzVWxoQ2MxWnRlR0ZsVm5CR1YyNWthRkpVUmpCWlZXaHpWakZLYzFOcmFGZFdSVnB5VmpCYVUyTnNaSE5SYkdScFlUQndNbFl5ZUd0TlJteFhWMWhvWVZKdGVIRlZiRkp6WTJ4U1YxZHJaRTlXYkZZMVdsVmFhMVp0U2xaalNHeFdUVzVvVkZadE1VdFhWbFowWVVaV1YwMHlhRzlXVkVKclZURktjazlXYUdwU01uaFZWV3hXZDFOc1duUmtSM1JQVW14R05GWXhhRzlYUjBweVRsaEdWbUpZVW1oV2FrWlRWakZrZEZKc1drNVhSVXBIVmxjd01WbFhSWGROV0VwcVVsaENXRlZ1Y0Vaa01WcElZek5vYWsxVk5YcFZWM2h2WVZaSmVGTlVTbGRTYkhCeVZXcEdXbVZHV25WVWJHaHBVbTVDZDFkWE1UQlRNbFp6V2taa2FGTkhVbFJVVlZKSFUwWmFXR1ZIUmxwV2F6VkhWR3hhVTFZeVNsbGhSMmhYVFZad1UxcFZXbUZXVmxwelYyMW9iR0V4YkRSV01WcFhWakExUjFkdVVsUmlSM2h2VlcweFUyRkdWbkpXYlVab1VtMTNNbFZ0TVVkaGJVcFdUbFZvVjFJemFGQldWRVpoVjFaR1dXRkdaR2xTYTNCSlYxWlNRazFXU25KTlZXeHBVbXh3V1ZWcVJrdFZSbHAwWkVkR2EwMVdjSHBaYTJoUFZqSktkRlZzV2xWV2JIQm9XbFphYzFac1dsVldiRlpvWld0YVdsZHNWbTlrTVZsNFUxaHdWbUZyTlZoWmEyUlRVakZ3UlZGVVJsaFdiSEI2Vm0xNGExWXlTa2hrTTNCWFlsaG9jVnBWV2twa01EVlpWV3hTYUUxWVFsRldiVEUwWkRKSmVGVnNXbFppUjFKVVZXMTRjMDVXYTNkV2F6bG9ZWHBHVjFrd1ZtOVdiVXBaWVVab1dsWnNjRXhXTVZwSFl6RlNjMVpzWkZkTmJXaEdWakZTUjFsV2JGZFRXR2hZWW1zMVZsbHJXbUZqUmxwMFpVaGtUMkpHYkRWYVJWcFBWMnhaZDFkdWJGVldWMmg2V1ZWYVQxSnNUbk5oUm1Sb1RWWndUVmRzWkRSWlZrcFhVMjVLV0dKWWFGaFVWbHAzVXpGYWNscEVVbFZOYTFwWVZUSTFTMkZzU2xoaFJteGFZVEZ3YUZsVldsZFdWa3B6WTBkNFYySklRalpXYWtvMFZERlplRk51VG1wU2JIQllXV3hvYjFZeFVsZFhhMXBzVW01Q1NsVnRlRXRoVjBZMlZteFdWMVo2UlhkWFZtUlhWakZrY21GSGVGTmlWa3BYVjFkMFZrMVdUbGRpUmxwWFlsaFNXRmxZY0VkWFJsbDVaVVZPV2xac2JEWlpWVkpMV1ZaYVYyTkdRbGROVjFKSVZXcEdWMlJIUmtaT1ZtaFRWbGhDV0ZadE1IZGxSVFZIVmxob1YxZEhhRmRXTUdSdlZrWlpkMXBFVWxwV2JFcFdWVEo0VDFZeFduTlRiR2hYVFdwR1NGbHJXbUZqTWs1RlVXMUdWMVl4UmpOV2JURjZaVVpaZVZScmJHbFNia0pQVlcwMVExZFdXblJOU0doVVRWVndlVlJzV21GV1YwcEhWMnM1VjJKWWFETlViWGhoVjBkU1NGSnNWazVpUlhCSlZteGpNVk14VVhoWGJrcFBWbXhLV0ZsVVJtRldNWEJYVjIxR2ExSXdOVWRVTVdRd1ZHMUtSMk5FVmxkU2JGcDJXWHBHWVZOR1RuSmFSbEpwVW14d1dWZFhkR0ZUTVdSSFZtNU9XR0pZVW5KV2FrRXhVakZhU0dWR1pGWk5hMVkyVlZkMGMxWXhXalpSV0doWVZteHdhRll3V2t0WFZuQkdUMVprVTFaWVFscFdiVEF4WkRGS2NrMVZaR0ZTYlZKb1ZXeGtVMWRHYkhKV1ZFWnNVbXh3TUZwVll6VmhSbHB5WWtST1ZXRXhTa1JXTUdSR1pWWlNjVlZzWkZkU1dFSlZWbGR3UjJFeVVsZFdiazVvVWpKNFdGWnROVU5YYkZsNVpVZDBUbEp0VWpCV2JUVlBXVlpPUm1OR2FGcGlSa3A2V1RGYVUxWXlSa1pVYXpWVFlrWlpNVmRyVm1wT1YwWkhWMjVLVDFaWGFGaFVWM0JIWkd4YWNWRllhRk5OVm5CNFZsY3hSMVV3TUhsaFNHeFlZVEZhVjFwVldtdFdNVloxVlcxd1UxWkdXbHBXVjNoWFpERmtjMWR1U2xaaE1sSndWRmQwVjA1R1pISmhSVGxhVm10d1dWWlhlRmRYYlVwWllVUk9WMkpHY0ZSV2FrWnJZMjFTUms1WGJGTmlhMHBMVmpKMFYxWnJOVmhTYkdoVFlXeHdWRmxVU2xOaFJsWnpWMjFHVGsxV2NGbFplazV2VlRKS1NGVnFSbGRpV0dob1ZrZDRZV015VGtWVGJHaFhZa1Z3VFZaclVrZFVNVWw0VjI1V1ZHSlhhRlJVVlZwM1ZVWmtXR1ZIUmxSTmJFWTBWakowYTFadFJYZE9WbFpWVmpOT05GUnJXbk5qYlVaSFZHMW9WMkV5T0hsWFYzUnZVVEZaZVZKdVNsUmlWMmhZVkZaYWQwMHhXblJsU0dSVFZteGFlbGxWV210V01VcFdZa1JhVjJKR1NrdGFSRUV4VmpKS1IxcEdVbWxTTW1oWVYxY3hORmxXYkZkalJtaHJVbGhTYzFscldtRmxWbGw1VGxkMFYxSnNiRE5aTUZacldWWktXRlZVUWxkTlJuQkxXbFZhVDJOV1NuTmFSMmhvVFdwb00xWXhXbXRsYlZaSFdrVmtWR0pzV2xkWmExcExWMVpXY1ZSdE9WaFNiVkpaVkZaU1ExWkZNWEpPVldoYVlUSm9VRmRXV2t0V1ZscHpVV3hrYVZkRk1UUlhiRlpoV1ZaT1NGWnJhR3RTYkZwd1ZXeG9RbVZHV2xkWmVrWm9UVlp3V0ZZeWVHdFdSMHBIVTJ4a1lWWXpVak5XTUZwYVpERndSMVJzVWxOV1JscFpWMVpXWVdFeVJsZFhXR3hvVW10YVdGbFhkSGROTVZaeFUyeEtiRlpzU25wWlZWcFRWMFpKZUZOc1JsZGlXR2hvVlhwS1IxSXlUa2RoUjNSVFYwWktWMVp0TVRSV01EVkhWMjVTYW1Wc1dsZFpiRlozVTFaUmVGVnJPVmhpVlZZMFZqSjRVMVl4V1hwaFIwWmhWbXh3V0ZreU1WTlNNV1J6V2taT1YxZEZTazlXYWtaVFVqRnNXRlJZYkZWaVIxSldXV3RhWVZaR2JGbGpSbVJYVW0xNE1GcEZWakJYUjBwSFkwVnNZVlpXY0ZCV1YzTjRWbXMxV1dOR1drNWliRXBaVm14amVGTXhXbGRYYms1cFVtNUNjRlZxUmtwTmJHUnpWbTFHYTAxV2JEUlhhMmhYV1ZaS2RHRkdVbHBXUlRWRFdrUkdhMk5zV25Sa1IzQk9WbXhaZWxaR1dtOVdNV3hXVFVoc2FGSnRhRlpXYm5CWFpHeHdTR1ZIUmxSU1ZFWlhXVEJrTUZSdFNrWmpSV3hYVmtWd05sUldXbFpsUm5CR1drWlNhRTFzU2xsWFYzUmhaREpPVjFWdVRtRlNXRkp4VkZaYVMyVnNXWGxsUm1Sb1VsUkdTbFZYTURWV01VcDBWVlJDVm1GclJYaFdha3BMVTFaT2MxZHRhRTVTUmxveVZteGplRTFHV1hkTlNHaFhWMGQ0Y1ZWc2FGTlhWbXhaWTBWa1ZGWnNjRmxhVldNMVYyeGFjbU5JY0ZkTlYyaHlWbTF6ZUZJeVRrbFRiVVpUWWtoQ1NWZHJWbXRUTVVsNFZXNUtUMVp0VW5CWlZFSnpUVEZhZEdORlpGWk5WVlkxVld4b2IxWkdaRWhWYXpsWFlrZFNkbFpyV25OV1ZrcHlaRWR3YVZKcmNGcFdSbHBoVkRGYVYxTnVUbFJpUm5CWFZGYzFUazFXYkZWU2JVWnFUVlUxZVZkcldtdFZNREI0VTJ4R1dGWnNjR2hWTWpGU1pWWlNjbFpzU21sU01VcFZWMnhrTkZsWFNYaFhXR2hZWWxWYVZWbHNXbUZYVmxwMFpFWmtWazFyY0VsWlZXaERWMjFLUjFOdWJHRldNMmh5VmpCVmVGTlhSa2RYYXpWWFRWVndXbFp0TUhkTlZsVjRWVzVPV0dKR1dsUlphMlJ2VmpGc1dHUklaRmRTYkVwWVZqSjRhMVF5U2taalNHeFZUVlp3VEZaSE1VWmxSMDVHWTBaa2FFMXNTWHBXYlhCSFZqSlNSMVJ1VGxkaVJUVndWV3hhZDFkc1pGaE5SRVpTVFZWd1NGWXlkR0ZYUjBWNlZXeFNWVlpzV2pOVVZscGFaVlV4VmxwR1ZtbFNWM2N5VjFaV1YxbFdXWGhYYms1cVUwVndZVlpyVm1GVlJtdzJVbXQwV0ZadVFraFdSekZ6VmpGS2MyTkdaRmRpVkVVd1dWUkdWbVZXU25KYVIzQlRWakpvVUZadGVGTmpNazVYVm01U2ExSXdXazlXYlhoM1UxWlNWMWw2VmxkTlJFWjZWakkxZDFZd01YRldhazVYWWxoT05GWnFSbXRrVms1elkwZDRhRTB3U2xaV2JUQjNaVVpOZUZOdVVsTmhNbEpZV1d4a05HTkdWWGRXYTNST1RWWnNORmRVVG05VU1VcHlUVlJXVjFKdGFIWlpWbHBQVWpGT2MxRnNaR2xYUmtsNlZteFdZV014V2xkVGJrcHJVbXh3VDFacVRtOU9SbHBYVjJ4T1UwMVdWalJWTVdoclYwZEtTRlZzWkZwaVJrcERXbFZhWVdOc1pIUlNiR1JvWld4YVdGWnJaRFJpTWtaSVVsaGthbEpHY0ZoV2FrNVRZVVpXY1ZKdGRGTk5helZIVmpJeGQxVXlSWHBSYkVKWFZqTm9hRnBFUVhoV01XUnpWbXhPYVZJeFNuWldSbVI2WlVVMVYxWlliR3hTTUZwdlZtMTBkMWRXYkZaaFJUbFhZWHBHU0ZZeWREUlhhekZIWTBod1dtVnJXbkpaZWtaM1VtczFWMXBIYkZoU01EUXhWbTB4TUdFd05VZFZXR3hVWVRKU1dWWXdaRk5YVm14eVlVVk9WMDFXY0RCVVZsVXhWR3hhYzJORlpGZE5ha1pJVm10YVMxWlhTa2RpUmxacFVtNUNWVlp0Y0VkWlZscFhWMjVPVW1KSFVrOVpiWFJMVTFaYWRFMUlhRmROVjFKSVZUSjRjMkZXU1hkWGJGSlZWbnBXZGxac1dtRlNNVnAwVW14d1YwMVZjRmxXTW5SaFlqSkZlRk5ZY0ZaaWExcFdWbXBPVTAweFVsWlhiRnBzVmxSV1dGWkhlR3RVYkZwMFpIcEdWMkpIVFhoVlZFWnJZekZrZFZWc1dtbFNhM0JvVjJ4a01GbFhWbk5WYmxKc1VtczFjVlJXVlRGTlJsWjBZM3BHYUZJeFducFdNblF3VmpKS1NGUnFUbFZXYlZKVFdsVmFVMlJXVW5OV2JXaE9Za1Z3TkZac1VrTmhNVlY0V2taa2FWSnNXbFZaYTFVeFYwWlNWMWR1WkZSV2JrSkhWbXhTVjJGR1dYZFhWRXBXWWxoU2NsZFdXa3RXTVdSeFZHeGtWMDB3TkRCV1Z6RTBZVEpTVjFkdVRsaGhlbFpZV1d0b1ExVnNXbk5YYlhSUFVqRktNRlpXYUhOV1IwVjRZMFprV21FeFdqTldNRnBUVjBkV1JtUkdWbE5pU0VKWlZteGtNRlF4VlhkTldFcHFVMGhDV0ZWcVRtOWhSbHB6V2tWYWEwMXJOVWxaVlZwWFZqRlplRkpZWkZkV1JWcG9Wakl4VjFOR1NuSmFSMFpUVFcxb1VGWlhkRmRUYlZaeldrWldVbUpVYkc5VVZtUTBWMFpWZVdWSE9WZGlWWEJKVmxjeFIxZHNXWHBWYWs1WFVsWndWMXBFUm5kU2JWSkhWV3hrYVZORlJqTldiR040VGtac1YxVnVVbFJpYXpWVldXdFdZVmRHV25SbFJYUlZVbTE0V1ZSV1drdGlSa3B6VTJ4d1dHRXlVbnBXVkVaaFkyMU9SMVZzWkdsWFJVcE5WbXhTUjFSdFZrZFhiR3hoVW0xU2IxUlVSa3RWVmxwMFRVaG9UMUp0VWtoWGExcHpZV3hLV0ZWc1dscGhNVm96VmpKNFlWZEhVa2xVYkdST1VrVmFXbFpyV205aU1XUkhWMjVTVm1FemFGaFVWV1JUVjBaVmVGZHJkR3BOYXpWSVYydGFhMVJzV2xoUFNHeFhZV3RhY2xSVlpFWmxSbFpaWWtaV2FFMXNTbFZYVjNScllqSkdSMVp1UmxWaVZHeFdWRlphZDJWc2JGWldhemxYVW10d2Vsa3dXbk5aVmtwWVZGaG9XbUV4Y0V4V2JGcFhZMVpXYzJORk5WTk5iV2hXVmpGYVlWbFdVWGhUYmtwUFZtMW9iMVZ0TVZOalJsbDNWbXQwVDJKR2NFaFdWM1JyWVVVeFYySkVWbFppV0ZKeVZteGtTMWRIVmtaUFZuQm9UVzFvUlZZeFdtRmhNazV6VjI1U1UySkdXazlXYlhoYVRVWmFjVk5VUmxSTlZrWTBWako0YjFadFNraGhSMFpYWVRGYU0xa3llRk5XVmtwMFpFZHdWMkY2VmpWWGExWmhZakZWZUZkcmFHeFNia0paV1ZSR1lXTnNiSEZTYkhCclRVUkdXRmxyV2t0aFIwWTJWbTA1VjFaRlNuWlZWRXBIVWpKRmVtSkZOVmRYUmtwNFYxZDRZVk14VGtkV1dHeHFaV3RhVjFSV1pGTlRSbFY1WkVkMFYwMXJjRWhaTUdoaFZteGFObEpzVG1GV1YxSkhXbGN4UzFKck9WZGhSazVZVWxWd1UxWnFSbUZWTVVsNFZGaG9WMWRIYUhCVk1GWmhWbFpzYzJGR1RsZFdiWGg1Vm0xNGExUnJNVmRYYWtKVlZsWktTRll5ZUdGamJVNUdXa1p3VGxJeVozcFdiWGhoV1Zaa1IxWnVTbWhTYkhCdlZGWm9RMU5XWkhKWGJVWm9UV3hLU1ZaSGRHdFdWMFkyVm14b1dtSkdTbmxVVlZwaFl6SkdTVnBHU2s1V2Exa3hWbGQ0YjJFeFVuTlhibEpvVW14d1lWWnJWbmRrYkZweFVtNU9hazFZUWtsVU1XUjNZVlpLYzJORVVsZFdla1V3V1ZSR1UyTXhaSFZXYkVwb1RXeEthRlp0ZUd0VWF6RlhWMnRvYkZKWVVsbFdiWFJoVm14V2RFMVZaRlpOVlhCYVZWYzFjMVl4V2taaVJGSldaV3R3VUZwRldrOWpiVXBIVTIxc1UyRXpRbEZXYlRFMFZURlplRk5zWkdGU2JWSllXV3hvVTFac1VsWlZiR1JZVW14YU1GUnNXazlXVjBwSFkwaHNWazFxUm5aWFZscGFaV3hXY21WR1pGTmlTRUpZVjJ4V1lWbFhUbkpQVm1SVVlsZDRWRnBYTVRCT2JGbDRXa1JDVjAxV1ZqUldiVFZQVjBaa1NHVkdaRnBXUlRWVVZtcEdZV05zV25Ka1JsWlRZbXRLU0ZacVNURlVNVmwzVFZac1VtRXhjRmhXYm5CSFpXeGFWVkZZYUZOV2JGcGFXVlZhYTFZeVNrbFJiRlpZVjBoQ1NGWkVTazVsUmxKellrZG9VMDF1YUZWV1YzaGhaREpHUjFkclpHRlRSMUpVVkZaa1UxTkdiSEpYYlVaWVVqQndNRlpYZUZkV2JVWnlWMjFvVmsxdWFGaFdNRlY0VjFaU2RHRkdaR2xUUlVreVZqRmpNV1F4VFhoWGJsSlhZbXR3VlZsclZrdFpWbEpZVGxjNVYxSnRkRFZhVlZwUFlURmFjbGR1Y0ZaTmJtaHlWa2N4UzFKdFRrWk5WbVJwVW01Q1ZWWldVa2RUYlZaWFZHNVdWV0pHV25CVmJUVkRWakZrVjFWclRtdE5hMXBJVmxkNGIyRnRWbkpYYkZaYVlURndXRlJzV2xOak1WcHlUMWRvVTJKSGQzcFhWRUp2WkRGYWRGTnNWbGRpVjJoWVdWUktVMU5HYTNsamVrWlhUV3RhU1ZWdGVFOVZNVnAwVDFSYVYySkdTa1JYVmxwT1pWWlNjMXBHVG1saVJYQlZWMWQwWVdReVRYaGlTRXBZWWtoQ2MxbHJXbk5PVm5CV1YyMTBhRlpVUmxoV01qVjNWMjFHY2s1WVdscFdNMmhRVldwR1QyUldSbk5YYXpWVFlrWlpNRll4V2xkWlZteFhWMnhrVTJKcmNISlZhazVUVkRGYWNWUnNTazVpUjFKWldrVmFhMVpWTVhKWGJHeFdUVzVvYUZsV1drdFNNV1J6VjJ4V1YySldTbFJYYTFKSFZqQTFjMVJ1VG1GU2JXaFVWRlpXZDFOR1drVlNiVVpVVFZaS01GVnROVXRYUjBwSVpVWm9WbUZyTlZSWlZWcHlaVlV4VjFwR1pFNVdNVWw0Vm0wd2VGSXhWWGROU0doVVlrWmFXRlp1Y0ZkTk1XdzJVbXhrVTAxV2NIcFdiWGhUWVZkR05sWnNVbGhXTTFKeFZHeFZkMlZIU2tsVGJHUnBVbFJXV0ZkWGVGZGtNVnB6Vm01U1RsSkdXbGhVVjNSaFpWWlNjMkZIUmxoaVZscDVWakkxYzFsV1dqWlNhM2hXWWxob1VGbDZSa2RqTVhCSFdrVTFUbUpYYUV4V2JYQkhZakpSZUZSdVNrNVdiVkp3VlcweGIxWldiSFJrU0dSV1VteHdlVlp0Tld0WFJscHpZMGhzVjJKVVZuSlphMlJMVTBkV1NXSkdhR2hOV0VKUlZtMTBZVmR0VVhoWGJrWllZa2RTY0ZaclZscGxiRnAwWkVkR1ZHSldXbnBXYlRWSFZUSktTRlZzVWxkaVdHZ3pWbFphWVZZeGEzcGhSbEpPWWtWd1NWWlVTalJqTWtaWFUyNVNWbUpVYkdGWlZFWjNUVEZzY1ZKdFJsTk5XRUpHVmxkNGQxWXhXa1pYYkd4WFlrZFJkMWxxUmxKbFJtUnpWMnM1VjJFd2NGbFhWM1JyWWpGRmVGVnNaRmhpYlZKVVZtMXpNVTFHY0VaWGJFNVZZa1Z3UjFZeWNGTldNVm8yVVZob1dsWkZXbkphUlZwUFl6RmFjMVJ0YkZOTmJXaDJWbTB3ZUU1R1pISk5WV1JxVWxkU1dWbFVTbE5qVmxwMFpVaGtiRlp1UWtkWGExSlRWMFpLY21KRVVsWk5ia0pJVm1wR1lWSnRUa1ZVYkZwc1lURndXRmRzV21GVU1rNXpZMFZvYUZKVVZrOVVWVlozVmpGWmVGZHRkRTlTYlhoWlZrZDRhMVl4WkVoVmJHeGFWa1UxVkZreFdsTldNWEJGVVdzNVYySllhR0ZYVkVKWFlUSkdSazFWVmxOaWJrSllWRmMxYjFkR1dYZFhiVVpUWVhwV1dGVlhlR0ZVYlVwMFlVVm9XR0pHY0doV2FrcFRWakZPZFZSdGNGTk5iV2gyVmtaak1WVnJNVWRYYmtwWVlrZFNZVlpxUmtkT1JtUnlWMjA1VmsxclZqUldNbmhQVjJ4a1NWRnJhRnBOUm5CNlZteGFSMlJXVG5SbFJrNXBVbXhyZUZaclpEUmlNVkY0Vlc1S1RsWnRhRkZXYTFVeFdWWnNXR042Um14aVJuQjZWMnRXTUdGck1YSk9WWEJXVmpOb00xbFdXa3RrVmtaWlkwWm9hRTFWY0VsWFZsSkxWVEZrUjFOdVJsaGlSVFZ3Vm1wS2IyUXhXbFZSYkdSVVlsWkdORll4YUc5V2JVVjZVV3M1VjJKWWFFeFdNRnBYWXpKR1NHUkdXazVoTTBJMlZtcEplR0l4V25SVGJsWlNZVEpvV0ZSVlduZE5NVnB4VW01a1UyRjZWbGxhVlZwclZHeE9SbE5yZUZkaVdFSkxXbFZrVG1WV1NuSmFSbWhvVFd4S1dWZFdaSHBOVm1SWFlraEtXR0pWV25KWmExcDNWMVpTVjFacVFtaGlWWEJZVmpKMGExWXhXWHBoUlhoWFlXdEdORnBHWkVkVFYwcEhXa2RvYUUxSVFscFdiR2gzVXpGUmVWUllhR3BTVjFKb1ZXcEtiMVpHYkZsalJtUnJUVlp3V1Zrd1ZrdFViRmw0VW1wU1YxWjZWbEJaVlZwS1pXeFdkVkZzV21sWFIyaFpWa1pTUjJNeVRuUlNhMnhoVW0xU1ZGbHJhRU5YUmxwSVpVWmtUMUpzY0ZoV01qVlRWbTFLUmxOc1pGVldWbkF6VmpCYWQxSnNjRVphUmxKVFRWVndTVlpyWkhwTlZsbDVVMnRvYTJWclNsaFpWM1IyWkRGYWNWTnJjR3hXYXpWYVYydFZNVll4V25WUmJtUlhWa1ZLVjFSV1dsSmxSbHAxVkd4YWFWSXhTbFZXYlRCNFRrWmtSMWR1VW10U00xSnZWbXBDZDFJeFVuTlhiWFJYVFZWc05sWlhlRU5YYkZwR1VtcFNXazF1VFhoV2JGcEhZekpPU0dGRk5XbFdNbWhoVm1wR1lWVXhTWGhUYmxKWFlrZFNjVlZzWkRSWFJteHlXa2M1YWxKc2NIbFdiVEZIVkRKS1NGVnNjRnBOUmxweVdWUkJlRmRHVm5OaFJtUlhUVEpvTWxZeFdtRlRNbEpYVW01T2FWSnNjSEJWYWtwdlVrWmFSMWR0UmxoaVZscElWMnRvVTFWR1dYcFJia0pXWW01Q2VWUldXbUZqTVdSMFQxZHdUbUV4Y0ZsV2EyUXdXVlpSZUZwRldsUmlSMUpZV1ZSR1lWUkdXa1pYYmtwclRWZFNNRnBGWkhkVWJGcHlZMFJXVjJFeVVqWlVWbHBhWkRBeFZsWnNUbGRTVm5CWlYxZDRiMkl5VG5OaVJsWlRZbGhTY2xWdGN6RmxiR1J5VjIwNWFGWXdWalJaTUZwM1ZqSktWVkZxVWxwaGExcHlWV3BLVDFJeVJraGxSbEpUVFZWd1dsWnNZM2hOUm14WFdrWmtZVk5GY0doVmExWkxWMVpXZEdSSVpGZE5WM1F6V1ZWb1QxWXdNVVZTYkdoYVRVZG9hRlpxUm1GU2JVNUdaVVphYVZaRldsbFdWRVpoV1ZkTmVGcElVbWhTTW5oVVZqQldTazFXV25SbFIwWldUVlZXTkZaR2FITldWMHB5VGxoQ1ZrMUdXbWhXYkZwelkyeHdSMVJ0Y0U1V00yaFhWbFJLZDFVeFdrZFhiazVVWW01Q1lWWnNaRk5UUm14V1ZsaG9WMkpHY0hoV1IzaGhWRzFHYzFkc1JsZE5WbkJvVjFaYWExSXhXblZXYlhCVFRVWndXVmRzWkRCWlZscFhWMnhvYTFJd1dsUlVWM2hMVjBaa2NtRkdUbWhpUld3MVdWVmFiMVl5U2toaFJVNWhWak5vWVZwVldsZGphemxZWTBVMVYxWnNhM2hXYkZKTFRVZEplRmRyYUZSaE1taHpWVzF6TVZsV1duRlViRTVWVW0xM01sVnRNVWRXTVZweVRsaHNWVTFYVVhkV1IzaGhWMVpHY21KR1pGZGxhMFkwVmpGYVlWbFdaRWRUYkd4aFVsUnNXRlZzVm5kaFJscHhVVzA1VWsxc1ducFdNblJ2WWtaS1dGVnNhRmRpV0ZKb1dsWmFkMVpzWkhKUFZscE9ZVEZaTUZkWGNFOWtNV1JIVjFod2FGTkZjRmRVVjNCSFYwWnNObEpzVG1wTmExcEpWVzE0VDFSc1NuVlJhazVYWWxSR00xWkVTa3BrTURWWlZHeG9XRkl6YUhwV1YzaFRZekZWZUZWc2FHcGxhMXBWVm0xNFYwNVdVbk5XYXpsWFlsVndWMWt3V21GV2JVcFZVVlJHVjJGcmNFaFpNbk14VjFaa2MyTkhlR2hOV0VFeFZqSjRhbVZHVVhoVWJHUmhVMFUxV0Zsc1pHOVVNVlp5VjJ4d2JGSnNjSGxXTW5oclZqQXhSVkpyYUZkU2VsWlFWbFJHYTFOR1ZuTlZiSEJwVW10d1dWWnRlR0ZaVjAxNFkwVmtWV0pYYUZSWmJHaFNaV3haZVdSR1pFNVNiSEJJVlRJMVQyRnNTblJsUm14YVZrVmFNMVV3V21Ga1IwMTZZVVpPYVZaVVZrZFdWbVEwWWpGWmVWTnJiRkppYlhoWVZXcE9VMk5zVmpaU2EzUnJVbXh3ZVZscldtdGhWa3B6WTBoYVdGWnNTa1JhUkVwWFVqRndSMkZIZUZOTk1VcFJWbGQ0VTFFd05VZFhhMlJvVWpOU1dGWnFRbmRsVm10M1YyMUdXR0pHY0VkVmJHaHZXVlpLYzJOR1VsZGlXR2hvV1RGYVIyTXhWblJpUms1WFlrZDNNbFp0ZUdwa01sRjNUVlprV0dFeVVsbFphMlJ2WWpGV2MyRkhPVnBXYlhoV1ZUSjRUMVpWTVZsUmJHeGhWbFphY2xsVVJtRmtSbFp4VVd4d2FFMXNTalpYVmxaclZqSk5lRnBJUmxoaVIxSllWV3hhZDFkV1duTlpNMmhXWWxaYVNWVXhhSGRoVmtwelYyNUNXbUV4V2pOV01WcHJWMFV4U1dGSGJFNWhlbFkyVm1wSk1WSXhWWGxUYkZwWVlrVktZVmxVU205U1JsWnhVbTVPVjJKR2NGWlZiVEZ2Vkd4YWRWRllaRmRTUlZwVVZtcEdXbVZXVG5OaVJrcG9UVlZ3V1ZaWGVHRmtNVTE0WTBaYVlWSllVbFZXYlhSaFpXeHJkMWR0ZEZkTlJFWXdXVlZhWVZZeVJYaGpSbWhhVmtWYVUxcFZXbE5qTVhCSFYyMXNVMkpJUW1GV01WcHZaREZKZVZSWWFGaGlhM0JvVld0Vk1WUXhXblJsU0U1UFVteHNOVlJWVWxkaFJrbDNZMFpvVmsxdWFIWldNakZIWTJzMVdXTkdjRmRpU0VKTlZsY3hORlF5VWtaUFZtUllZWHBXVkZsdGRFdGtiRmw0Vld0T1dsWXhSalJWTVdoelZUSkZlR05HUmxkaGEyOHdWbXRhVTFac1ZuTlhiWFJPVm01Q05WWXhhSGRTTVdSelYxaGtXR0pIZUZkVVYzQlhWVVphY2xwRmRHcGhlbFpaVlcxNGQyRldTbkpqUm14WFlrWktTRnBFUmtwbFJuQkpWbXhTYVZkSGFGbFdiWFJyVGtac1YxZHVUbUZUU0VKelZXMTRTMDFHVm5OaFNHUldZbFZ3TVZWWGVITldNa3AxVVd0U1ZXRXhjRE5WYkZwUFkyczVWMVJ0YUd4aVJuQllWbTF3UzA1SFVYbFRhMmhUVjBkU2NWVnRkRXRYVm14eVdrWkthMDFXV25oVlZtaHZZV3N4V1ZGcmNGZFdNMDB4Vm1wR1lWTkhWa2xpUm1oWFRURktlVlpHVmxaTlZsbDVVMnRzVkdKVldsUlZiWFIzWkd4YVIxZHNXazVXYXpWWVdUQldZVlp0UlhwVmJHeGFZa1phTTFVeFdtRlhSMUpJVDFab2FHVnJXa3BXYkdRd1RrWmtjazFWWkZkV1JWcFlXV3RhZDAweFZYZFhhM1JyVWpCd1NGZHJWVEZVYlVwWVZHcFdWMkpVUmpOVmVrRXhVMFpPZFZWc1dsaFNNMmhWVjFkMFlXUXlUbk5XYmxKclUwZFNWbFJXV21GbGJHeFdWMnM1VjFKVVJsaFdNbmhoVm14WmVsVnVTbHBXYlZKTVZXMXpNVll4Y0VkalJtUlhZa2hDVWxZeFpEQlpWbVIwVlZob1lWTkZOWEJWYlhoaFkwWldkR1JJWkZOV2JIQjVWbTB4UjFVeVNsZFhiR2hYWWxSV1NGWnFTa3RUUjBaSlVXeGFhR0V6UWpKV1ZFWmhXVlpKZUZwSVVsTmlXRkpQVm1wR1MxZFdXbk5aZWtaVFRWWmFNRlV5ZUhOVmJVcHlUbFpvV2xZelVrZGFWVnBUVmxaS2MxcEhjR2xTTVVvMVZqSjBhMDFIUmxkVGFscG9UVE5DV1ZacVRsTlhSbHBWVW14a2FrMVhVbHBaYTFwaFlWZEZlbEZzYUZkU2JGcG9WMVpWZUdNeFZuTmFSbWhwVWxoQ2VsWnRNSGhOUlRWeldraEtXR0pGTlZaWmExWjNaVlpyZDFkc1RsaFNiR3cyVlZkME5GZHNXa1pYYkVKYVpXdGFURll4V25kU01WSjBZa1prVTJKSVFsaFdiVEI0VGtaYWNrMVdaRk5YUjJob1ZUQldZVlV4YkhSamVrWlhWbXhhTUZSV1drOVViRnB6VjJ4c1ZWWnRhRkJXYlhONFVsWktjMkZHY0U1U01taFZWbXBDWVZsV1NuTlVibFpVWWtad2IxbFVRbHBOUmxwVlVXMUdWRTFyTlhwV2JUVlBWa2RLU0ZWc1VsVldSWEIyVmtaYVlXTXhaSE5VYkVwT1lrVlpNRlpVU2pSaE1WcHpXa1ZvYkZORk5WZFpWRVozVkVaa1YxZHNUbGROYTFwSFZrZHpNVll5U2tsUmEzQlhVak5vY2xWcVJtdFRSa3B4VjJ4T2FHRXdjRzlXYlhocllqRldSMXBHWkZoaE0xSlpWV3BDWVZOc2EzZFhiVGxYVFZWd1dGa3dVa3RXTVZsNlZXMW9WMUpGV25KVmFrcFBVbXhrZEdWR1RrNU5iV2hhVm0weE5HSXhSblJWV0doWVYwZG9XVmxzVm1GaU1WSldWV3hrVkZac1ZqVmFSV1JIVmpKS1ZtTkZaRnBOUjJoRVZteGFZVll4VG5OaFJscHBVbTVDTmxadGNFZFpWMDV6WTBWb2FWSXllRlJXYTFwaFYxWmFkR1JIZEU1U2F6RTBXV3RhWVZSc1dsaGhTRTVXWWtad2FGWnFSbUZrUlRGWFZHMXdhVkpzY0RaV2FrbzBZVEZrUjFOc1ZtbFNiWGhXV1d0YWQxWkdXbkZTYlVaWFZteHdlVlpYZUd0VWJVcHlVMnRXV0ZkSVFraFZla1pLWlVaT2RWUnRhRk5OUm5CVlZtcENWMU14V2xkWGEyUmFaV3RhY0ZSVlVrZFRSbHB6WVVjNVYwMXJjRnBXVnpGSFZqSkdjbEpZYUZaTlZuQlhXbFprVTFORk9WZGFSVFZYWWxoamVGWnRlR3ROUlRGSFYxaHNVMWRIYUZWWlZFWkxXVlpzYzJGSE9WWlNiR3d6Vm14b2IxZEdTbkpqUkVKaFZsZFNlbFpxUmxwbGJHdDZZVVprYVZkR1NuaFdSbHBoVW0xV1NGTnJaR0ZTTUZwVVZtcEdTMVpzV25Sa1JtUmFWbXh3ZWxadE5WZGhiRXAwVld4U1ZtSllhRXhhVjNoaFpFVTFWazlYYUdsU2JYZDZWMWQwVTFReFdsaFRhMlJZWWtaS1lWWnNXbmRoUmxwMFpVZDBhMVpzY0hwV01uTXhWakpLU1ZGc1NsZGlSbkJ5Vkd0a1UyUkdWbGxpUmxKb1RWaENXRmRYZEZka01XUkhWV3hvYkZKWVVsWlZiWGgzVjBaYVdHUkZPVlpOUkVaNVdUQm9kMVl4U1hwaFIyaGFWbFp3UzFwWGVGZGtWa3B6VjIxb2FFMVlRazVXYkZKSFdWZEZlVlJzWkZWaWJFcHlWV3BLYjFkR1duSldhM0JzWWtad1ZsVXhVa2RXVlRGWVZXcENWazF1YUhaWmExcFBVakZrZEZKc1pHbFhSMmQ2VmxSQ1lWVXlVa1pOVmxwUVZteEtWRmxyVm5kT2JHUllaRWRHVlUxV1NucFhhMVpoVlRGa1NHVkdhRlZXYlZKVVZGUkdWMDVzU25OVGJYaFhZa1Z3TlZZeWRHdGtNVlY1VTJ4c2FGSnRhRmxXYlRGU1RVWmtWMWR0ZEdwTlZuQXhWbGR6TlZZd01IaFRibWhYVm5wR05sUlZWWGhqTVZwWllrVTFWMVl4U25aWFYzUlhZekF3ZUdFelpGZGlhelZZVkZkMGQxTldiRlpYYTA1WFlYcEdNVmxWVm10WlZrcEdZMFYwWVZaNlJsQlZha1pYWXpGd1JrNVhiR2xXYTFZMVZtMHhkMU15VVhoVFdHeFdWMGRvYUZWc1duZFZSbHAwVFZjNWFsWnNXbmhWTW5CVFZsVXhXR1ZJYkZkaVZGWnlWa2R6ZUZkR1ZuTmlSbFpYVmpKb01sZFdWbXRTTURWMFUydGtZVkp1UW05VVZ6RnZWMVphZEdORmRGTk5helY2VmtjMVUyRkdTblZSYkdoYVlURmFNMVZyV21GU01WcDBVbXhXVGxZeFNrcFdWRW93WXpGYVNGTnNXbGhoZW14WVdWZHpNV1JzWkZkWGJVWnFZa2RTTUZwRlpHOVViRmw2WVVad1YxWjZRWGhXVkVaWFVqRmtjMVp0YkZOaGVsWlhWbTAxZDFKck1VZFdiRlpUWWxoU2NWWnRkR0ZOVmxwSVpVVTVWazFyVmpSWk1GcDNWakF4ZFZWc2FHRlNSVnBZV1RKemVGWnNaSE5oUjJ4cFVtNUNXVlpyV21GWlZteFhWbXRrVjJKSGFITlZNRnAzWTJ4U1dHUklaRk5OVm5CWldsVldNRll3TVVWU2JuQldUVzVSTUZacVJtRmpNVTV5Vld4YWJHRXpRbFZXVjNCSFZqSk9kRkpyV2xCV2JWSlBWRlpXZDA1c1duUk5XR1JTVFZkNFdGZHJhRTlYUjBwSVlVVTVWMkV4Y0V4V2JYaFhaRWRPTmxKc1RrNVdNMUY2VjFaV1ZrNVdaRWhUYkdSWVltMTRWbGxyV21GV1JtUlhWMnQwVDJKRmNIbGFWV1JIVlRKS1NWRnNWbGhoTVZweVZtcEdTMk5yTVZkaFIyeFRUVzVvVlZacVFsZFRhekZ6VjI1R1ZHRnNTbGhVVjNSelRrWmFkRTVXVGxkV01GWTBXVEJhYTFkdFJYaFhhazVhVFVad1ZGWXdWWGhXTVZKelZXczFWMkpJUWxoV2JGcHJUVWRGZVZKc2FGUmhNWEJRVm0weFUxZEdWbkZVYkU1VlVtMVNXRlpzYUc5V1JrbDRWMnRrV21FeGNISlpWbHBoVWpGa2MxSnNhRmRpVmtreVYyeFdhMVJ0VmtkYVNFNVhZa1pLY0ZWc1VsZFdWbVJYVld0a2EySldXbGhXTVdoellXeEtWazVZUmxWV2JGb3pWVEJhVjJSSFZraFBWbkJYWVROQ1lWWldaRFJVTVZwWFYyeGtXR0pYYUdoVmJYaDNWakZ3VmxkdFJtcGhlbXhZVlRJeGMxVXlWblJrUkZwWFRWZFJkMVpxUmxabFJscDFWV3hPYVdFelFsRldiVFYzWXpGa1IxVnNXbGhpYlZKV1ZXMDFRMU5XY0ZaV1ZGWlhUV3R3U1ZwSWNFdFdNa3BWVWxoa1YxSXphSEpWYlhoUFl6Sk9SMXBHVGs1TlZYQTBWbXRrTkZsV1VYbFZhMlJVWWtkNGFGVnNVbGRXUmxaellVVk9XR0pHY0ZsYVZXUkhZVEpHTmxKcmFGcGhNbWhRVjFaYVMxWldXblZVYkdScFVtdHdObFpxUm1GamJWRjRZMFZvVUZadFVrOVZhMVpoVjFaa1dHUkdUbFZOVjFKSlZUSjBhMkZzU1hsaFJscGFWa1ZhTTFwV1duZFNWazV5WkVaU1YyRXhiM2RYYTFaaFZESktTRkpZYUdwU1JYQllXV3hTUjAweFdrVlRhM0JzVm14S1dsbFZXbUZoUlRGWlVXeGtXRlpzU2tSYVJFcEtaVVprZFZKc1RtaE5iRXBSVm0weE5GWXdOVWRhU0Vwb1VsUnNXRlp0ZEhkbGJGcDBZMFU1VjJGNlJuaFZWbEpIVmpBeGRWUnFUbUZXYlZKWVZXMTRWMk15VGtoaVJrNXBVbXhaTUZacVJtcGxSMVowVm10a1ZHSnNTbGRaVkVaM1kxWldkR1JJWkZWTlZscDZWakkxYTFSc1duTmpSbHBXWWxob2NsWnNWWGhXYkdSMVkwWndhR0Y2Vm5sWFZscGhVekZaZUZSdVRsVmlSMUp2V1ZST1ExWldXbGxqUldSWFRWWndXRlZ0TlV0WlZrbDVaVWhDVm1KR1NsaFdNRnBoWTJ4d1JWRnNVazVXTTJoWVZrWmFWMkl5U2tkVGJHaHNVbTFvVmxadE1WTmtiRmwzVjI1T1YxWnJXbHBYYTJRd1ZHMUdObFpyZEZkTmJsSnlWV3BHVm1WR1pGbGhSbEpwVWpKb1dsWnRjRTlSTVU1SFkwVldVMkY2YkZSVVZtUlRUVlphV0UxWVpGWk5SRUl6VlRJMWExZEdXWHBoU0ZwYVlsUkdXRmw2Um5kVFZrNXpXa2RvYkdKWWFETldhMXByVGtac1YxcEZaR2hOTWxKWldXMXpNVmRHV25GUmJtUk9VbXh3V1ZSc1ZrOVdNVnB6WWtSYVZsWXphSFpXYkdSTFYxZEdTVk5zY0d4aE1YQlZWbTE0WVZNeVRuSk9WbVJWWWxkNGIxUlZhRU5pTVZweFVtMUdWMDFXVmpSVmJHaHZWbTFGZVZWc2FGZE5SMUV3V1RKNFYyTXhWblZVYkZwT1ZtdHdXbFpHV2xOVk1WWnlUVlpvVm1KdGFGZFdibkJYVlVaYVZWSnJkR3BpUjFKNldXdGFiMkZGTVZkaU0zQlhZa2RTTmxwVldrdGpNWEJKVm14a2FWSnVRbEJXYlRFMFpERldWMWRzWkdGU1JrcHlXV3hhUjA1V1ZYbGtSMFpYWWxWd1Ixa3dXbTlXVmxsNllVVjRWMUpXY0doV2FrWlhZMnhTYzFWck5WTlNWbTh5VmpGYVUxUXlVWGxTYTJoWFltdHdXVmx0Y3pGWlZteHlWMjVrYUZKc2JEVmFWV1JIVmtaSmQwNVZaRmRTTTJnelZtcEtTMU5GT1VsaVJtUlhZbFV4TkZZeFdtRlpWazVIVTI1V1ZHSllRbFJaVkVKM1lVWmFkR1JHWkZSTmJGcDZWbTAxVTJKR1NuSk9WbWhYWWxSR1ZGcFdXbE5XTVZwVlVtMW9WMkY2VmtoV1YzaHZZekZaZDAxV2FGWmhhelZYV2xkMFlWVXhjRmRYYkU1cVlraENTVmt3V2s5aFZtUklZVVpzVjAxV2NISlVhMXB6VmpGV2NscEhjRk5pVmtwdlZsZDBWMU14V25OVmJHUlhZa2RTVUZadE1UUmxWbHAwWkVSQ1dHSkdjRlpWYlhSeldWWmFWMWRzYUZkaVdHaG9Xa1ZhVjJSV1RuTlhhelZwWWxkb1NWWXlkRk5TTVUxNVZXdGFUMVp0VWxkWmEyUlRWMFphY2xkdFJsTldiSEI0VlRJMWExVnJNWEpOVkZKV1RXNVNjbFpVU2t0VFIwWklZVVphYVZJeWFFVldiRkpIVlRGYWMxZHVWbGhpV0doWVdXeGFTMVl4V25KWmVrWlVUVlpLZWxZeGFHOVhSMFp5VTJ4b1dtSkhhSFphVjNoaFl6RndSbHBIY0dsU1ZGVjNWMVpXWVdFeVJsaFRia3BVWVRGYVdWbFVTbEpOUmxwRlUyczVWMDFXV2pGVk1uaFhZVWRXZEdWR2JGZFNiSEJZV2tSR1QyTXhjRWRhUm1ScFZrZDRhRlp0Y0VOWlZtUlhWbTVTYkZJd1dsaFZha0pYVGtaWmVXVkhSbGRXYkc4eVZtMDFWMVpXV2xkalNFcFhZa1p3VEZwR1duZFRSMUpIV2tkc1UxWjZhekJXYlRGM1V6QTFTRlZZYUZaaWJFcFZXV3RrTkdJeFZYZGhSVTVZVm0xNFZsVnRNVWRoTWtwSVpIcEtWbUpVVmt4WmExcEtaREZrY2xwR2NGZFdia0paVjFaYWExTXhaRmhTYTJ4cVVtMVNiMWxVUW5kWFZscFZVMWhvVm1KV1draFpNRlp6VmxkS1dHRkdVbGROUmxwTVdsWmFZV1JIVGtaVGF6VlhZWHBXTmxkWGRHRldNVnBIVjJ0YVdHSkdjRmRaYkdodlYwWlNWVkpzWkd0U1ZFWkdWVzE0WVZSc1dsbFJhbFpYWVd0d00xVjZSbXRUUmtwMVUyeFNhV0pyU2xoWFZsSkhaREZPUjFkWVpGaGliVkpVV1d4Vk1WTkdWWGxqZWtaV1RWWndNVlZXYUc5V01rcEhVMnRvVjJGcldsTmFWVnBMWkZaU2RHSkZOVTVpUlhBelZteGtORmxXVFhoV1dHaFlZbXRhVlZsclZURldWbEpYVjIxR1YySkdXbGxhUldRd1lVWlpkMk5GYkdGU1ZrcFFWako0WVZZeFpGbGFSbkJYVFRKb1RGZHJVa3RVTVVwWFUyNU9ZVkp0VW5CV2JGSkRUa1phYzJGSVpGSmlWbHBKVmtab2MxWlhSWGxsUjJoV1lsUldSRmxxUmxOWFIxWkdaRVpvVTJKSGR6RlhWRUpYWVRKR2RGTnNaRmhpYmtKWVZXNXdWMU5HV25GVGEzUllWbXRhZWxadGVHRmhWbVJIVTFod1dHSkhVVEJXTWpGWFYwWldjbGRzUWxkTmJXaDNWbTE0VTFZeFRrZFhiazVoVWtaS1ZWUlhkR0ZXTVZKWFlVWk9WMkpWVmpaV1YzaHJWakpGZUZkcmVGWk5SbkI2V2tWa1YxSnJPVmRhUjJ4VFlUTkJNVlpzVWtwbFJrbDRWVzVPVkZkSVFtOVZiR2hUVjBaYWRFMVZOV3hTYlhjeVZUSjBhMVV3TVZoVmJtaFhUVzVvY2xZd1drcGxSazV6VjJ4a1UySkdjRmhXUmxwclZESk5lVk5yYkZWaVZWcFVWbXBHUzFkc1dsaGpSV1JhVm1zMVdGa3dXbUZXTWtwMFZXeG9WbUpZVW5wVWExcFdaVVpXY2xwR2FGTmlTRUkyVjFSQ2IxbFdXWGhYYTFwcVVsaG9WMWxzVWtkVlJsWnpWMjFHYTFJd1drZFViRnBQVlRKS1NWRnJhRmRpV0VKTFZGWmtVbVZHU2xsaFJscG9UV3hLVjFkWGRHRmtNVnB6WWtaV1VtSnRVbTlWYlhoTFZqRmtjbFZzVGxaTlZuQjZWako0YjFkSFJYbFZXR1JYWVRKU1RGVnRlR0ZqVmxKelYyczFhV0V3Y0ZwV2JYQkRZVEZOZUZSclpGWmlhMXBYV1d4V1lWWkdjRmhrUjBaWFZtMVNlVlp0TVVkWGJGbDRVMnRvV0dFeWFGUldWRXBMVTBaV2RWUnNjRmRTVm5BMlZrY3hORmR0VmxoVmEyUmhVako0VDFsWWNFWk5SbVJWVVcwNVZrMVdjRWxWYkdoellVWk9SbE5zWkZWV1ZuQXpXVlZhYzFac1pITmpSM1JPVm01Q1lWZFdWbXROUjBaWFUxaG9WRmRIVWxoVmJYaDNaR3hhUlZOclpHcGhla1pZV1d0YVMyRldTWGxoUm1SWFVteHdjbGxxU2s5ak1XUlpZa2Q0VTAweFNsVldSbHBXVFZVeFYxZFliR3hTYXpWV1dXdGFkMWRHV1hoaFNHUlhUVmRTU2xWWGRGTlhiVlp5VjJ0NFZtRnJXa3haZWtwSFUwWktjMVJzYUZOV1dFSldWbTEwWVZZeFdYaGlSbWhXWWtkU1dGWXdaRzlYUm14WlkwaE9WazFXU2xsYVZWWnJWREZhYzJORmJGVmlSbkJRV1ZWYVlXTnJOVlpoUm1ST1lXeGFUVlp0TVRSWlZrcDBWR3RzV0dKVldsUldiVFZEVlZaYWNWRnNXbXhTYlZKSVZUSTFVMkZzU25KT1dFSlhUVVp3UjFwVldscGxSbVJ6V2tkc1RsWldXVEJYVjNSaFlURnNWMU5zWkdwVFJVcFhXVzAxUTFkR1pGZFhiazVxVFZaYWVsZHJXbTlWTWtweVUydG9XRlpzV25KYVJFWlRaRVpPYzFkdGNGTlhSVXBvVjFaU1MxVXlWbk5pU0VwWVlsVmFXRmxzVmxkT2JHdDNWMjEwYUZacmJEUlZiWEJQVmpKS1dWRnJhRlpsYTFweVZXcEdkMU5XVW5SaVJrNU9UVlZ3VjFac1pEUldNbEY0Vlc1T1lWTkZOV2hWYTFaTFYxWnNXV05HWkZoU2JIQlpXa1ZhYTFZeFdYZFhibXhXVFdwV1NGWnNXbUZrUjBaR1ZXeGtUbFp1UWxWWFZFbzBZekExYzFkdVRtcFNiVkpQVlRCV1MxbFdXWGxsUm1ScFRXeEdORmRyVm05V1IwVjVZVWM1Vm1KR1NucFhWbHBUVm14d1IxUnRhRk5pUjNjd1ZqSjBZVlF4VlhkTlZtUlVZbTVDV0ZWcVRtOWpiR3hXV2taa2FrMVhVbmxaYTFwcllWWmFSbFpxVGxoV2VrSTBWbXBHU21WV1NsbGpSMnhUWWtWd2QxZFhkRmRrTWxaelYyeG9hbEpVYkhCVVZsVjRUa1phZEU1VlpGWk5hM0F3VmxjMVMxWldXblJWYkZKWFlsaG9WMXBXVlhoU1ZscDBZVWRzVTFkRlJqUldiRnByVGtkUmVGZHVTazVXYldoWFdXMTBkMWRHV25OYVJrNVVVbXh3TUZwVlZUVldNVnB6VTI1d1dHRXhjSEpXUjNONFZtMU9SMk5HWkdsU01VVjNWMVpTUjJNeFdYaGpSV1JvVW14d2IxUlhNVzlWUmxwMFkwVjBhVTFYVWtoV1YzaFhWa2RLVldKSVRscGhNbEpVVkZWYWQxWnNiRFpXYkZacFVsaENObFp0TVhkVk1WcHlUVmhXYUZORmNGaFphMlJUVWpGd1ZscEZPVk5OYTFwSVZqSnpNVlV5UlhwUmExcFhUVmRPTkZSclpFWmxSbVJaWVVaYWFXRXpRbGxYVjNSV1RWWmFWMVp1VGxoaWJWSmhWbTE0ZDAxR2NFWlhiWFJYWVhwR2VsWXlkRzlXTWtwSVlVaEtWMkV5VWt4Wk1uaHJaRVpLYzJOR1pFNU5SRVV3Vm0xMFYxbFhVWGhYV0doaFUwWmFhRlZ0TVc5V1JteHlWbTVrVDFKc2NGaFhWRTV2VlRBeFYySkVWbGRpVkZaTVZqQmtTMlJXUm5OaVJtUnBZbXRLUkZkc1ZtRlpWbVJJVm10c1dHSllhRmhaV0hCWFRteGtWMVp0ZEdwTlZuQklWa2QwWVZaSFJYcGhSbWhYWVdzMVJGVnJXbUZqVms1eVpFZHdUbUV6UWtsWFZsWldUVlpWZUZOdVRtcFNhMHBZV1d4b1ExRXhVbGRhUmtwc1VteGFNVlV5TVVkV1JrcFZWbXhrVjFaNlJUQlhWbHBoWXpGYWMyRkhkRk5TYTNCWVZrWmFWMlF5VmxkWFdHeHFVbGhTV1ZWcVFtRmxWbFY1VGxoa1YySlZWalJaTUZadlZqQXhSMk5FVGxaaVZFWlFWV3BHVDJOck5WZFViR1JwWVRCWk1GWnRNVFJWTVVsNFYxaHNVMWRIZUZaWmJYaExWbXhzZEdONlJsWk5WM2g1VmpJeFIxWXhTbk5qU0hCWFZqTm9jbFpVUm1Ga1JsWnhVbXh3VGxKc2NGRldiWGhoVXpKT2NrNVdaR0ZTYlZKVVZGUkdTMVJXV1hoWGJGcHNVbXMxU1ZadGRHRmhWa3AwVlc1Q1YwMUdXa3hXYkZwaFkxWk9kV05IZUZOTlJFVXdWakowYjFJeFdsaFRiRnBZWWtaS1dGbHNhRk5OYkhCWFYyMUdhbUpJUWtaVlYzaFhWRzFGZWxGcVZsZFNiSEJZVjFaa1JtVkdUbk5pUmtwcFVsUldWMVp0ZUdGWlYwWkhZMFZrV0dKR2NITlZiWGgzWlZaUmVGZHJkR2hXYTI4eVdWUk9kMWRHV1hwVmJHaFhWa1ZhV0ZwRldrOWtWbFp6VjIxc2FFMVlRbTlXTVdRd1lURldjazFWWkZaaVIxSlpXVzB4VTFaR2JISlhhM1JPVW14S2VsZHJZelZXTURGRlVteGtXazFHY0ROV2FrWktaVzFHU1ZOc1ZtaE5XRUpSVjFod1IxUXhaRmhTYTJSb1VqSm9jRlZ0TlVOaU1WcHlWMjEwYTAxVmJEUlhhMVpyVm0xS1NGVnRhRlppUmtwNldURmFWMlJIVWtoU2F6VlRZbXRLV0ZZeWRHOWhNVnBZVW1wYVUySkhVbGhVVjNCWFYwWlpkMWR0ZEZSV2ExcDZWVmQ0YTJGSFJYcFJiR3hYWVd0S2FGWnFTbE5XTVZwMVZHMUdVMDF1YUhkV1Z6QXhVVEExVjFkdVVteFNlbXh5VkZaYVYwNVdXa2hrUjNSWFZtMVNTVmxWV2xOV01ERklWV3hTVjJKR2NGUldiWGhyWTIxU1IxZHJOVmROTW1jd1ZteFNTbVZGTVVkWGEyaFVZVEZ3V0ZsWGN6RldNV3h6WVVVMVRsWnNjRmxaZWs1dllURktjMU51YUZkU00yaG9XV3RrUm1Wc1JuTlNiR1JYVWxad2IxWnJVa3RWTVZsNFUyNVdWbUpYZUZSVVZ6VnZaREZhV0dWSFJtdGlWbHBZVmpKNFYxWkdXa1pYYmtaVlZqTlNhRlJWV21GVFIxSklVbXhrYVZaWVFraFhWRUp2VVRGYVYxZHNaRlJpUjJoWFdXdGFkMlZzYkRaU2JtUlRWbXhhZVZSc1dtdGhWbVJIVW1wYVYwMVdjRmhYVm1SR1pVWldkVlJzVW1sU00yaFlWMVpTUjFsV1pGZGlSbFpVWWxSc2NWbHJaRFJYVmxKWFZtcENWMDFFUmxsV1Z6VnZWakF4ZFdGRVRsZFNNMDQwV2taa1IxSnNXbk5oUm1ScFVtNUNXbFl4YUhkU01WRjRWR3RrVjJKcmNHOVZhazV2VmtaU1ZWTnRPVmhTYkhCSVZtMTRhMkZyTVVWUmFsSllZVEZ3ZGxaRVJtdFNhelZYVkd4V1YwMHlhRzlXUmxaaFdWWmtTRlZyYUZCV2JIQlBXVlJPUW1ReFpITldiVGxVVFZad2VsWXlkR0ZXUjBWNlZXMW9WbUV4V21oYVYzaGhaRWRXU1ZwR1RrNVdNVWwzVmxjeGVrMVhSbGRUYkd4U1lUTlNXRmxVUmt0VFJteHhVbTVPV0ZKcmNIcFhhMXBYWVVVeFdWRnNRbGRoYTBwb1YxWmFZVll4Vm5OYVJtUnBVakZLVUZaR1dtRlhhekZ6Vm14b2JGSlViRmhaYkZaM1ZqRlNjMVp1WkZkTlJFWjRWVzF3VDFkdFJYaGpSMmhXWVd0YWNsWnNXazlqTWtaSVlrWk9hV0V3YkRWV2JURXdWVEZHZEZaclpGUlhSM2hXV1ZSS1UySXhWbk5WYkdSWFVtNUNXVlJXVWxOV1ZscHpZMFZvVjFZelVsQldhMlJIVG14S2MyRkdjRTVTYkhCdlZqRmFZVk13TlhSVGEyeFVZa2hDY0ZWdGVIWmxiR1J5Vld0a1YwMVhVa2RVYkZwaFlURktkVkZzYUZwaVJuQk1WVEo0YTJNeFduUlBWbVJPVmpGS1NsWlVTakJpTVZwWFdrVm9WbUpYYUZkWmJGSkhWa1phVmxkc1dteFNia0pIVmpJeE5GWXhXa2RYYkdoWVlrWmFhRmRXV2xwbFJrNXpWMjF3VTFaR1dsbFdiWEJQVlRKR1IxWnVSbFJpUlRWeFZGWldZV1ZzV2xobFNHUlZZWHBHUjFrd1ZURldNa3BIWTBaT1lWSkZSVEZXYlRGUFVsWmFkR0ZGTlU1U1ZtOTRWbGh3UjFReVRuTlJiRkphVFRCS1RWWldVWGRQVlhBMVlUTkJia3RUYXowbktTaz0nKSk='))'))